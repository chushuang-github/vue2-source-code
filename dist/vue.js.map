{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/init.js","../src/globalAPI.js","../src/index.js"],"sourcesContent":["// 我们希望重写数组中的部分方法\r\n// 获取数组的原型\r\nlet oldArrayProto = Array.prototype\r\n\r\n// Object.create(oldArrayProto)：以数组原型对象为原型，创建一个新的对象\r\n// newArrayProto.__proto === oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\n// 重写的7个方法 (这7个方法是会修改原数组的)\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\n// 重新数组方法：重新的方法内部依然调用原数组里面的方法，保证重新的方法依然能够实现数组的功能\r\n// 但是实现了数组这7个方法的劫持\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function(...args) {\r\n    const result = oldArrayProto[method].call(this, ...args)\r\n\r\n    // 如果调用数组的push和unshift方法新增数据，新增的数据是对象的话，也需要对这个对象进行劫持\r\n    // 数组的splice方法也可以新增数据\r\n    // 数组增加的数据\r\n    let inserted\r\n    // this.__ob__：Observer类的实例对象\r\n    let ob = this.__ob__\r\n\r\n    switch(method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':  // arr.splice(1, 1, {a: 1}, {b: 2})\r\n        inserted = args.slice(2)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    // 如果有新增的，再次对新增的数据进行劫持\r\n    if(inserted) {\r\n      // 这里this表示数组，在Observer类里面写了data.__ob__，所以这里的数组(this)身上也会有__ob__\r\n      ob.observeArray(inserted)\r\n    }\r\n\r\n    // 调用数组的7方法，会在这里劫持到 (对数组进行依赖收集，调用dep的notify方法，让dep去通过watcher进行更新)\r\n    ob.dep.notify()\r\n\r\n    return result\r\n  }\r\n})","let id = 0   // 当前dep的唯一标识\r\n\r\n// Dep用来收集依赖，一个属性会对应一个dep，dep将使用该属性的一个或多个组件收集起来\r\n// 首次渲染的时候手机依赖，更新的再次收集依赖\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++          // 属性的dep要收集watcher\r\n    this.subs = []   // 存放着当前属性对应的watcher (Set容器可以去重，防止重复收集依赖)\r\n  }\r\n\r\n  // 收集器，收集watcher (watcher记录dep，还是dep收集watcher，都不能重复收集)\r\n  // 先调用watcher里面addDep方法，让watcher记住dep；\r\n  // watcher如果记录成功会调用dep里面的addSub方法，让dep也能收集watcher\r\n  depend() {\r\n    // 注意：dep收集watcher时，不要重复收集 (一个属性在一个watcher里面使用了多次，这个属性收集一次该watcher就可以了)\r\n    // watcher和dep是多对多的关系\r\n    // watcher也要去记录dep：实现计算属性，和组件卸载是一些清理工作需要用到\r\n    // watcher的get方法里面，给Dep.target赋值为了当前的watcher，这里就是调用watcher里面的addDep\r\n    Dep.target.addDep(this)\r\n\r\n    // dep收集watcher：属性发生变化，让该属性的dep去通过watcher重新渲染视图\r\n    // this.subs.push(Dep.target)   // 直接收集会重复收集\r\n  }\r\n\r\n  // dep真正收集watcher的方法 (该方法在Watcher里面的addDep方法中调用)\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n\r\n  // dep通过watcher更新视图，重新渲染页面\r\n  notify() {\r\n    // 遍历该dep收集的所有watcher，调用watcher的update方法去更新视图\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\n// 在Dep类上面增加一个静态属性\r\nDep.target = null\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher) {\r\n  stack.push(watcher)\r\n  Dep.target = watcher\r\n}\r\nexport function popTarget() {\r\n  stack.pop()\r\n  Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep","import { newArrayProto } from './array'\r\nimport Dep from './dep'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // 给所有对象和数组本身都增加收集功能，增加dep (data类型可能是数组，也可能是对象)\r\n    this.dep = new Dep()\r\n\r\n    // data身上增加一个属性__ob__，职位this(这里this表示Observer类的实例)\r\n    // 给数据增加了一个标识，数据上面有__ob__，则说明这个属性是被观测的\r\n    // __ob__：这个属性是不可遍历的，不然下面遍历data这个数据，就会报错\r\n    Object.defineProperty(data, '__ob__', {\r\n      enumerable: false,\r\n      value: this\r\n    })\r\n    if(Array.isArray(data)) {\r\n      // 重写数组中的7个方法：保留数组原有的特性，并且重写数组的部分方法\r\n      // 改变数组的原型\r\n      data.__proto__ = newArrayProto\r\n      // 数组里面的属性如果是对象的话，这个对象也要被劫持\r\n      this.observeArray(data)\r\n    }else {\r\n      // 给data对象重新定义响应式数据，去覆盖之前的普通数据\r\n      // Object.defineProperty()只能劫持已经存在的属性，后增加的数据和删除的数据是劫持不到的\r\n      // vue2里面会有一些单独的api去处理上面的情况 (Vue.$set、Vue.$delete)\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  // 循环对象，对属性依次进行劫持\r\n  walk(data) {\r\n    // 重新定义响应式属性，覆盖之前的属性\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n\r\n  // 观察数组，如果数组中的属性是对象的话，也要对数组中的对象进行劫持\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n\r\n// 数组里面的值是数组，需要对数组里面的数组本身进行依赖收集 (数组里面嵌套数组，嵌套的数组，不过多少层都要对该数组本身进行依赖收集)\r\n// 结论：这个方法也说明了data里面的数据数组如果是深层次的嵌套数组，会递归进行依赖收集 (递归多了性能就差)\r\n// 问题：Object.defineProperty对于不存在的属性检测不到，存在的属性还要重写一些方法(vue.$set，vue.$delete，数组的7个方法等)\r\n// 综合以上问题，vue3采用了Proxy进行数据的劫持和代理 (Proxy里面不存在的属性可以检测到，存在的属性也不用重写了，但是Proxy也需要进行递归)\r\nfunction dependArray(value) {\r\n  for(let i = 0; i < value.length; i++) {\r\n    let current = value[i]\r\n    current.__ob__ && current.__ob__.dep.depend()\r\n    // 递归调用，不管数组里面嵌套多少层的数组，都能进行依赖收集\r\n    if(Array.isArray(current)) {\r\n      dependArray(current)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// 属性劫持\r\n// defineReactive方法可以单独的去使用，所以不放在Observer类里面\r\nexport function defineReactive(target, key, value) {\r\n  // 对所有的对象都进行深度属性劫持 (递归深度劫持)，childOb身上有一个dep用来收集依赖\r\n  // observe函数返回的是new Observer(data)类的实例\r\n  const childOb = observe(value)\r\n\r\n  // 给每个属性增加一个Dep\r\n  let dep = new Dep()\r\n\r\n  // 对数据进行劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      // new Watcher进行初次渲染的时候，会去使用被劫持的数据从而进入get方法里面，该属性的dep就去收集当前watcher\r\n      if(Dep.target) {\r\n        dep.depend()  // 让这个属性的收集器记住当前的watcher\r\n        // 让用户传入的配置项data里面的数据，对象和数组本身也实现依赖收集 (以前依赖收集针对属性，这里依赖收集针对对象和数组本身)\r\n        // 举例：vm里面数据hobby: [1, 2, 3]，初始页面中这样 {{hobby}}，模板中JSON.stringify(hobby)取值，取hobby的值\r\n        // vm.hobby就会触发get进入这里，让vm.hobby这个数组的dep也收集依赖(收集当前watcher)\r\n        // vm.hobby.push()方法调用的时候，push方法里面调用了vm.hobby这个数组的dev.notify()方法进行更新\r\n        if(childOb) {\r\n          childOb.dep.depend()\r\n\r\n          // 数组里面的某一项是数组，要对这个数组本身也要进行依赖收集\r\n          if(Array.isArray(value)) {\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if(newValue === value) return\r\n      // 如果newValue值是一个对象，需要对这个对象再次进行代理\r\n      observe(newValue)\r\n      // 这里面使用了闭包，所以直接修改value值，get里面取值的时候，取的值相当于从闭包里面取出来的 \r\n      value = newValue\r\n      // 更新属性的时候，要去重新渲染视图 (告诉该dep，让dep去通知的watcher去更新视图)\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if(typeof data !== 'object' || typeof data === null) {\r\n    return  // 只对对象进行劫持\r\n  }\r\n  // 数据上面有__ob__属性，表示该数据已经被代理过了\r\n  if(data.__ob__ instanceof Observer) {\r\n    return data.__ob__\r\n  }\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了\r\n  // 要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过\r\n  return new Observer(data)\r\n}","import Dep from \"./dep\"\r\nimport { pushTarget, popTarget } from './dep'\r\n\r\nlet id = 0\r\n\r\n// watcher就是观察者，属性对应的dep就是被观察者，属性变化被观察者会去通知所有的观察者去更新视图 -> 观察者模式\r\n// Watcher就是真正更新视图的东西\r\n// 不同组件有不同的watcher(每个组件都会去new一个Watcher)，使用id进行唯一标识\r\nclass Watcher {\r\n  // 渲染watcher：exprOrFn函数作用调用vm._update(vm._render())渲染模板\r\n  // 计算属性computed的watcher：exprOrFn函数是Object.defineProperty监控计算属性的getter方法\r\n  // watch的watcher：调用exprOrFn函数，可以获取watch监听的那个属性的值\r\n  constructor(vm, exprOrFn, options, cb) {\r\n    this.vm = vm\r\n    this.id = id++   // 每一个watcher都增加一个唯一标识\r\n    this.renderWatcher = options  // true表示是一个渲染的watcher\r\n\r\n    // watch创建的watcher，exprOrFn可能为字符串，也可能为函数\r\n    // 计算属性创建的watcher 和 渲染watcher传入的exprOrFn值为函数\r\n    if(typeof exprOrFn === 'string') {\r\n      this.getter = function() {\r\n        return vm[exprOrFn]\r\n      }\r\n    }else {\r\n      this.getter = exprOrFn   // getter意味着调用这个函数可以发生取值\r\n    }\r\n\r\n    this.deps = []     // watcher记录dep：后续我们实现计算属性，和一些清理工作需要用到\r\n    this.depsId = new Set()   // 收集的dep的id(每一个dep里面有一个id属性作为唯一标识)\r\n    this.lazy = options.lazy  // 一个表示，表示当前watcher是计算属性watcher\r\n    this.dirty = this.lazy    // 计算属性的缓存值\r\n    this.cb = cb              // watch配置项的回调函数\r\n    this.user = options.user  // 表示是用户自己的watcher\r\n\r\n    this.value = this.lazy ? undefined : this.get()\r\n  }\r\n\r\n  get() {\r\n    // 模板被编译成render函数，在模板编译的render函数里面取值的时候，才会收集依赖 (Dep.target赋值为当前watcher)\r\n    pushTarget(this)               // 在Dep类上面添加静态属性，静态属性只有一份\r\n    let value = this.getter.call(this.vm)      // 调用vm._update(vm._render())进行渲染\r\n    popTarget()                    // 渲染完毕之后，就清空\r\n    return value\r\n  }\r\n\r\n  evaluate() {\r\n    this.value = this.get()     // 获取到用户函数的返回值，并且还要标识为脏\r\n    this.dirty = false\r\n  }\r\n\r\n  depend() {\r\n    let i = this.deps.length\r\n    while(i--) {\r\n      this.deps[i].depend()\r\n    }\r\n  }\r\n\r\n  // 改方法在Dep类里面的depend方法中调用\r\n  // watcher记录dep：一个组件(watcher)对应着多个属性，重复的属性也不用记录\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    // 如果当前watcher没有收集过这个dep，才会去收集 (去重了，没有才会添加)\r\n    if(!this.depsId.has(id)) {\r\n      this.deps.push(dep)   // 收集dep\r\n      this.depsId.add(id)   // 存取dep的唯一标识id属性\r\n      // watcher已经记住了dep，并且已经去重了，在这里调用当前dep的addSub方法并传递当前watcher实例对象\r\n      // 调用dep里面的addSub方法，让dep也去记住watcher\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n\r\n  // watcher里面更新视图的方法\r\n  // 属性变化，Object.defineProperte里面的set方法会监听到属性变化，该属性的dep调用notify方法\r\n  // 在dep里面的notify方法里面，遍历所有的watcher，调用watcher的update方法更新视图 (下面进行了异步更新的优化)\r\n  // 优化：多个属性在同一方法里面更新，就会调用多次update，我们需要实现异步更新的功能\r\n  update() {\r\n    // this.lazy为true，表示当前watcher为计算属性的watcher\r\n    if(this.lazy) {\r\n      // 如果是计算属性，依赖的值发生变化，取计算属性值的时候，dirty为true就会重新调用getter方法计算(计算属性为脏值)\r\n      this.dirty = true\r\n    }\r\n    // 调用get方法去更新视图 (直接更新，有个问题就是会多次更新，vue源码里面使用的是异步更新)\r\n    // this.get()\r\n    // 把当前的watcher暂存起来，等一个方法里面属性全部修改完毕在进行异步更新视图\r\n    queueWatcher(this)\r\n  }\r\n\r\n  // 异步更新视图里面调用的run方法去更新视图\r\n  run() {\r\n    let oldValue = this.value\r\n    let newValue = this.get()\r\n    // 如果是用户自己是watcher，就表示是watch配置项创建的watcher\r\n    if(this.user) {\r\n      this.cb.call(this.vm, newValue, oldValue)\r\n      this.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// 异步更新\r\nlet queue = []  // 队列，保存所有需要更新视图的watcher(需要去重，Set容器去重，对象去重都可以)\r\nlet has = {}    // 使用对象去重\r\nlet pending = false   // 防抖\r\nfunction flushSchedulerQueue () {\r\n  let flushQueue = queue.slice(0)\r\n  queue = []\r\n  has = {}\r\n  pending = false\r\n  flushQueue.forEach(watcher => {\r\n    watcher.run()   // 调用watcher里面run方法真正的更新视图\r\n  })\r\n}\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id\r\n  // 对象去重\r\n  if(!has[id]) {\r\n    queue.push(watcher)\r\n    has[id] = true\r\n    // vue一个方法里面多次更新数据，调用多次update方法，不管update执行多少次，最终只执行一次页面重新渲染的操作\r\n    if(!pending) {\r\n      // setTimeout是在一个宏任务队列里面去执行的\r\n      nextTick(flushSchedulerQueue)\r\n      pending = true\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// 异步更新，实现nextTick函数 (异步的批处理)\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n  let cbs = callbacks.slice(0)\r\n  waiting = false\r\n  callbacks = []\r\n  cbs.forEach(cb => cb())\r\n}\r\n\r\n// 微任务：promise.then回调、MutationObserver API(h5的api，只能在浏览器中使用，node中不可以使用)、queueMicrotask\r\n// vue源码里面 nextTick 没有直接使用 setTimeout 去异步执行callbacks队列里面的回调函数，而是采用了优雅降级的方式\r\n// vue源码内部采用的是promise(ie不兼容) -> MutationObserver -> 可以考虑ie专享的setImmediate方法 -> setTimeout\r\n// vue源码看支不支持promise，不支持使用MutationObserver，还不支持在使用setImmediate，最后不行就使用setTimeout\r\n// 其中：setImmediate 和 setTimeout是宏任务\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb)\r\n  if(!waiting) {\r\n    // setTimeout(() => {\r\n    //   flushCallbacks()\r\n    // }, 0)\r\n    // 采用优雅降级的方式\r\n    timerFunc()\r\n    waiting = true\r\n  }\r\n}\r\n// 异步执行api优先级：promise(ie不兼容) -> MutationObserver API -> setImmediate方法 -> setTimeout方法\r\nlet timerFunc\r\nif(Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks)\r\n  }\r\n}else if(MutationObserver) {\r\n  // MutationObserver：监听DOM元素的变化，DOM元素变化去执行MutationObserver里面传入的回调函数(是异步执行的)\r\n  let observer = new MutationObserver(flushCallbacks)\r\n  // 创建一个文本节点\r\n  let textNode = document.createTextNode(1)\r\n  // 调用observer.observe方法，去监控文本的变化\r\n  observer.observe(textNode, {\r\n    characterData: true    // 监控的是文本的数据\r\n  })\r\n  timerFunc = () => {\r\n    // 改变textNode节点文本的数据，文本数据变化，会去执行MutationObserver里面传入的回调函数\r\n    textNode.textContent = 2\r\n  }\r\n}else if(setImmediate) {  // ie浏览器才能使用\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks)\r\n  }\r\n}else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks)\r\n  }\r\n}\r\n\r\n// 属性(一个属性一个dep)和组件(一个组件一个watcher)关系：多对多的关系\r\n// 一个属性可以在多个组件里面使用，一个组件里面可以使用多个属性\r\n// 给每个属性增加一个dep，目的就是收集watcher (依赖收集：就是让属性收集它所依赖的watcher)\r\n// dep：是一个自定义属性(收集器)，可以用来收集watcher，一个组件对应一个watcher (dep让属性和组件产生关联)\r\n// watcher：当属性发生变化的时候，该属性对应的dep通知收集的watcher，watcher就去重新更新视图(重新渲染)\r\n// 1) 1个组件中，有多个属性(n个属性会对应一个组件)，n个属性会有n个dep对应一个watcher\r\n// 2) 1个属性，也可能对应着多个组件 (一个属性，在多个组件里面使用，这个属性就对应着多个watcher)\r\n//    1个属性，对应着一个dep，这个属性被多个组件使用 (该属性的dep就收集了多个watcher)\r\n\r\n\r\n// Watcher 和 Dep如何关联起来？\r\n// 前置：Dep类增加一个静态属性target；Object.defineProperty劫持每一个属性的时候给每一个属性增加一个dep\r\n// 1) 当我们创建渲染Watcher类实例的时候，会把当前的watcher放到Dep.target身上\r\n// 2) Watcher类里面回去调用get方法，get方法去调用传入getter函数(就是vm._update(vm._render())函数)，\r\n//    调用getter函数会去取值(这些值已经被数据劫持过了)，会去走Object.defineProperty的get方法\r\n\r\nexport default Watcher","import { observe } from './observe'\r\nimport Watcher, { nextTick } from './observe/watcher'\r\nimport Dep from './observe/dep'\r\n\r\n// 对数据进行劫持\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  // 初始化data\r\n  if(opts.data) {\r\n    initData(vm)\r\n  }\r\n  // 初始化计算属性computed\r\n  if(opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  // 初始化watch\r\n  if(opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n}\r\n\r\nfunction initData(vm) {\r\n  // new Vue的时候，传入的data可能是函数，也可能是对象\r\n  let data = vm.$options.data\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  // 在vue的实例对象上面添加一个属性._data值为data，data是被劫持的对象(_data也就是被劫持的对象)\r\n  vm._data = data\r\n  // 对数据进行劫持 vue2里面使用了 Object.defineProperty()\r\n  observe(data)\r\n\r\n  // 将vm._data使用vm来代理\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      // 读取vm[target][key]值的时候，回去触发defineReactive函数里面的劫持\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\n// vue2里面计算属性根本不会收集依赖，只会让自己依赖的属性去收集依赖\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed\r\n  const watchers = vm._computedWatchers = {}   // 将计算属性watcher保存到vm身上\r\n  for(let key in computed) {\r\n    let userDef = computed[key]\r\n\r\n    // 计算属性的watcher，监控计算属性中get的变化\r\n    let fn = typeof userDef === 'function' ? userDef : userDef.get   // 计算属性的get方法\r\n    // 直接new Watcher，默认就会去执行一遍fn函数，计算属性是不需要立即执行的，所以增加第三个参数让fn不立即执行\r\n    // 将属性和watcher对应起来\r\n    watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n\r\n    defineComputed(vm, key, userDef)\r\n  }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n  // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n  const setter = userDef.set || (() => {})\r\n\r\n  // 将计算属性里面的属性挂载在vm实例身上\r\n  Object.defineProperty(target, key, {\r\n    get: createComputedGetter(key),\r\n    set: setter\r\n  })\r\n}\r\nfunction createComputedGetter(key) {\r\n  // 我们需要检测是否执行这个getter\r\n  return function() {\r\n    const watcher = this._computedWatchers[key]   // 获取到对应计算属性的watcher\r\n    if(watcher.dirty) {\r\n      // 计算属性的值，也是在计算属性对应的watcher里面算出来的，计算属性watcher里面的dirty属性标记走缓存还是重新计算\r\n      // 如果是脏的，就去执行用户传入的函数(计算属性watcher里面的dirty为true，就需要重新执行getter方法计算)\r\n      // 求值后dirty变成了false，下次就直接取值，不调用getter求值了 (前提是计算属性依赖的数据没法发生变化)\r\n      watcher.evaluate()\r\n    }\r\n    if(Dep.target) {   // 计算属性的watcher出栈后还有渲染watcher，让计算属性依赖的值也去收集上一次watcher\r\n      watcher.depend()\r\n    }\r\n    return watcher.value\r\n  }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch\r\n  for(let key in watch) {\r\n    const handler = watch[key]    // 字符串 数组 函数\r\n    if(Array.isArray(handler)) {\r\n      for(let i = 0; i< handler.length; i++) {\r\n        createWatcher(vm, key, handler[i])\r\n      }\r\n    }else {\r\n      createWatcher(vm, key, handler)\r\n    }\r\n  }\r\n}\r\nfunction createWatcher(vm, key, handler) {\r\n  // 因为watch的写法种类太多，所有有很多情况是需要进行判断的\r\n  // handler可能是字符串获取函数 (handler也可能是对象，但是这里没有考虑这种情况)\r\n  if(typeof handler === 'string') {\r\n    handler = vm[handler]\r\n  }\r\n  return vm.$watch(key, handler)\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick\r\n  Vue.prototype.$watch = function(exprOrFn, cb, options = {}) {\r\n    // exprOrFn：字符串firstName or () => vm.firstName\r\n    // watch肯定是一个观察者，所以也是要new Watcher (这个watcher也会被监听的属性的dep收集起来)\r\n    // firstName值变化了，执行cb回调函数\r\n    new Watcher(this, exprOrFn, { user: true }, cb)\r\n  }\r\n}","// 标签：<div style=\"color: red;\">name: {{name}}</div>\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n\r\n// 匹配到的分组是一个开始标签名字，标签两种形式：<xxx   or   <xxx:xxx\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n\r\n// 匹配结束标签的名字  </xxxx>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\n// 匹配标签里面的属性\r\n// [^]正则表示'除了'，[^\\s\"'<>\\/=]+：除了 空格 \" ' < > / = 这些符号一个或多个\r\n// \\s正则表示'空格'；+正则一个或多个；*正则0或多个；?正则0个或1个\r\n// 注意：正则里面使用括号()表示捕获，但是(?:pattern)是⾮捕获型括号，匹配pattern，但不捕获匹配结果\r\n// 总结：(后面有?:，表示该括号值匹配括号里面的内容，不捕获括号里面的内容\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n\r\n// 匹配的内容：/>  or  >，开始标签为 <div>、自闭合标签<br />\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n// 匹配的内容：{{ aadfa }}\r\n// \\r正则表示换行；\\n正则表示回车\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\n// 解析html字符串，生成AST抽象语法树\r\n// 也可以使用htmlparser2第三方库进行解析   npm i htmlparser2\r\n/*\r\n  <div id=\"app\">\r\n    <div style=\"color: red;\">name: {{name}}</div>\r\n    <span>age: {{age}}</span>\r\n  </div>\r\n*/\r\n/* 解析成下面的AST抽象语法树形式(标签type为1，文本type为3)\r\n  {\r\n    tag: 'div',\r\n    type: 1,\r\n    attrs: [{ name: 'id', value: 'app' }, {}, {}...],\r\n    parent: null,\r\n    children: [\r\n      {\r\n        tag: 'div',\r\n        type: 1,\r\n        attrs: [{ name: 'style', value: 'color: red;' }],\r\n        parent: 父级的div元素,\r\n        children: [{ type: 3, text: 'name: {{name}}' }]\r\n      },\r\n      {\r\n        tag: 'span',\r\n        type: 1,\r\n        attrs: [],\r\n        parent: 父级的div元素,\r\n        children: [{ type: 3, text: 'age: {{age}}' }]\r\n      },\r\n    ]\r\n  }\r\n*/\r\n\r\n// html标签字符串解析成AST抽象语法树\r\n// vue2里面html字符串最开始肯定是一个 <\r\n// html字符串，解析完之后，就在html里面删除解析完的这部分字符串 \r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = []     // 使用栈结构，用于存放元素(栈-后进先出)\r\n  let currentParent    // 指针，指向栈中的最后一个\r\n  let root             // 根标签\r\n\r\n  // 进栈构建父子关系，出栈改变指针\r\n  // 匹配到开始标签\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n  function start(tag, attrs) {\r\n    // 遇到开始标签\r\n    let node = createASTElement(tag, attrs)  // 创建一个节点\r\n    if(!root) {           // 看一下是否为空树，如果是空树则当前节点是根标签\r\n      root = node\r\n    }\r\n    // 开始标签，currentParent有值，当前currentParent就是新创建的node的父元素(必须熟悉栈的操作)\r\n    // node设置父节点，currentParent设置子节点\r\n    if(currentParent) {\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node)  // 进行压栈操作\r\n    currentParent = node  // currentParent为栈中最后一个元素\r\n  }\r\n  // 匹配到文本\r\n  function chars(text) {\r\n    // 文本，给currentParent设置值\r\n    text = text.replace(/\\s/g, '')  // 去掉空格\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  // 匹配到结束标签\r\n  function end(tag) {\r\n    // 遇到结束标签，出栈\r\n    let node = stack.pop()\r\n    // 还可以校验标签是否合法 (结束的标签和栈弹出的标签是否一样)\r\n    if(node.tag === tag) {\r\n      currentParent = stack[stack.length - 1]\r\n    }\r\n  }\r\n  // 解析完的字符串标签之后删除解析完的这部分字符串标签\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  // 判断是不是开始标签，是开始标签就解析，不是开始标签返回false\r\n  function parseStartTag() {\r\n    // 调用字符串的match方法结合正则表达式进行匹配标签字符串\r\n    const start = html.match(startTagOpen)\r\n    // 如果是开始标签\r\n    if(start) {\r\n      const match = {\r\n        tagName: start[1],   // 标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签对应的结束标签的话，就一直匹配下去\r\n      let attr, end\r\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      if(end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    // 不是开始标签，返回false\r\n    return false\r\n  }\r\n\r\n  while(html) {\r\n    // <div>aaa</div>     </div>     aaa</div>\r\n    // 如果textEnd值为0，则表示是一个开始标签 或者 结束标签\r\n    // 如果textEnd值大于0，则表示是文本的结束位置\r\n    let textEnd = html.indexOf('<')\r\n    if(textEnd === 0) {\r\n      // 开始标签的匹配结果\r\n      const startTagMatch = parseStartTag()\r\n      if(startTagMatch) {  // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      // 不是开始标签，就是结束标签 (直接删除结束标签)\r\n      const endTagMatch = html.match(endTag)\r\n      if(endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue\r\n      }\r\n    }\r\n    // 处理文本\r\n    if(textEnd > 0) {\r\n      let text = html.substring(0, textEnd)\r\n      if(text) {  // 解析到的文本\r\n        chars(text)\r\n        advance(text.length)\r\n      }\r\n    }\r\n  }\r\n\r\n  return root\r\n}","import { parseHTML } from './parse'\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for(let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if(attr.name === 'style') {\r\n      // color: blue; background: blue  -->  {color: 'blue', background: 'blue'}\r\n      let obj = {}\r\n      attr.value.split(';').filter(Boolean).forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key.trim()] = value.trim()\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配：{{ adfad }}\r\nfunction gen(node) {\r\n  if(node.type === 1) {\r\n    return codegen(node)\r\n  }else {\r\n    // 文本\r\n    let text = node.text\r\n    if(!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    }else {\r\n      // {{name}}hello{{age}}  -->  _v(_s(name) + 'hello' + _s(name))\r\n      let tokens = []\r\n      let match\r\n      let lastIndex = 0  // 最后匹配到的位置\r\n      // exec() 方法用于检索字符串中的正则表达式的匹配 (exec里面正则如何是全局匹配，则需要注意下面的点)\r\n      // exec:如果在一个字符串中完成了一次模式匹配之后要开始检索新的字符串，就必须手动地把 lastIndex 属性重置为 0\r\n      defaultTagRE.lastIndex = 0\r\n      // 正则表达式的捕获方法 正则.exec(字符串)\r\n      while(match = defaultTagRE.exec(text)) {\r\n        // text：{{name}}hello{{age}}world\r\n        // match：['{{name}}', 'name', index: 0, input: '{{name}}hello{{age}}', groups: undefined]\r\n        // match：['{{age}}', 'age', index: 13, input: '{{name}}hello{{age}}', groups: undefined]\r\n        let index = match.index  // 匹配的位置\r\n        if(index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if(lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      // tokens：['_s(name)', '\"hello\"', '_s(age)', '\"world\"']\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  if(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n  }\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n  }${\r\n    ast.children.length > 0 ? `,${children}` : ''\r\n  })`\r\n  return code\r\n}\r\n\r\n// vue3采用的不是正则\r\n// 对模板进行编译\r\nexport function compilerToFunction(template) {\r\n  // 1.将template转化成ast抽象语法树 (利用栈型结构来构建AST抽象语法树)\r\n  let ast = parseHTML(template)\r\n\r\n  // 2.生成render方法 (render方法执行后的返回结果就是虚拟dom)\r\n  // 把ast抽象语法树组装成下面的形式，将ast抽象语法树拼接成字符串代码\r\n  // _c就相当于h函数，第三个参数开始一直往后面就是子标签\r\n  //  `_c(\r\n  //     'div',\r\n  //     {id:\"app\",style:{\"color\":\"blue\",\"background\":\"orange\"}},\r\n  //     _c('div',{style:{\"color\":\"red\"}},_v(_s(name),\"hello\",_s(age),\"world\")), \r\n  //     _c('span',null,_v(\"world\"))\r\n  //   )`\r\n\r\n  // 模板引擎的实现原理：with + new Function()\r\n  let code = codegen(ast)\r\n  // with语法：code这个字符串代码里面的变量优先从this里面取值，this是什么要去看如何调用render函数的\r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code)   // 根据代码生成render函数\r\n  // _c就是h函数，只不过名字不一样；文本使用_v函数；文本里面的变量使用_s函数\r\n  // ƒ anonymous() {\r\n  //   with(this){return _c('div',{id:\"app\",style:{\"color\":\"blue\",\"background\":\"orange\"}},_c('div',{style:{\"color\":\"red\"}},_v(_s(name),\"hello\",_s(age),\"world\")),_c('span',null,_v(\"world\")))}\r\n  // }\r\n  return render\r\n}","// 构建虚拟DOM提供一些方法\r\n// 是原始标签(div，span...)，还是组件标签(my-button...)\r\nexport const isReservedTag = (tag) => {\r\n  return ['a', 'div', 'p', 'button', 'ul', 'li', 'span'].includes(tag)\r\n}\r\n\r\n// 创建元素的方法\r\n// 之前讲过的h函数、项目里面的_c函数底层都是调用createElementVNode方法\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if(data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if(key) {\r\n    delete data.key\r\n  }\r\n  // 如果是原始标签\r\n  if(isReservedTag(tag)) {\r\n    return createVNode(vm, tag, key, data, children)\r\n  }else {\r\n    // 组件标签，创造一个组件的虚拟节点 (包含组件的构造函数)\r\n    // Ctor有可能是Sub函数，也可以是组件的配置对象(这个对象包括template...等配置对象)\r\n    const Ctor = vm.$options.components[tag]\r\n    // 创建组件的虚拟节点\r\n    return createComponentVNode(vm, tag, key, data, children, Ctor)\r\n  }\r\n}\r\n\r\nexport function createComponentVNode(vm, tag, key, data, children, Ctor) {\r\n  if(typeof Ctor === 'object') {\r\n    // vm.constructor就是vm的构造函数 - Vue，经过extend方法之后Ctor就一定是一个Sub函数了\r\n    Ctor = vm.$options._base.extend(Ctor)\r\n  }\r\n  // 组件初始化的hook钩子函数\r\n  data.hook = {\r\n    // 稍后创造真实节点，如果是组件节点则调用此init方法(组件增加初始化钩子)\r\n    init(vnode) {\r\n      // 虚拟节点上面保存组件的实例对象\r\n      let instance = vnode.componentInstance = new vnode.componentOptions.Ctor()\r\n      instance.$mount()\r\n    }\r\n  }\r\n\r\n  // 这里的Ctor一定是Sub构造函数：Sub.prototype = Object.create(Vue.prototype)\r\n  return createVNode(vm, tag, key, data, children, null, { Ctor })\r\n}\r\n\r\n// 创建文本的方法，项目里面的_v函数底层就是调用createTextVNode方法\r\nexport function createTextVNode(vm, text) {\r\n  return createVNode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// 创建虚拟节点\r\n// 会有一个问题，虚拟dom不是和ast抽象语法树一样吗？\r\n// 答：ast做的是语法层面的转化，它描述的是语法本身；虚拟dom是描述的dom元素，可以增加一些自定义的属性\r\n// 虚拟dom和ast长的像，但是功能比较ast抽象语法树多 (ast可以描述html css js; 虚拟dom描述dom元素)\r\nfunction createVNode(vm, tag, key, data, children, text, componentOptions) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    componentOptions  // 组件的构造函数\r\n    //... 后面可以扩展事件、指令、插槽，都可以在这里描述\r\n  }\r\n}\r\n\r\n// 判断两个虚拟节点是否是同一个节点\r\nexport function isSameVNode(vnode1, vnode2) {\r\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}","import { createComponentVNode, isSameVNode } from './index'\r\n\r\n// 在之前的更新中，每次更新都会产生新的虚拟节点，通过新的虚拟节点生成真实dom，生成后的替换掉老的节点 \r\n// 这样做就是把之前的节点全都用新的替换掉，哪怕更新一丢丢也是全部替换，这样做性能是比较差的\r\n// 使用diff算法：第一次渲染产生虚拟节点，后面再次渲染产生的虚拟节点和前一次的虚拟节点进行比对，找出差异，只更新变化的内容\r\n// diff算法是平级比较的过程，父亲和父亲比较，儿子和儿子比较\r\n\r\n// 创建组件\r\nfunction createComponent(vnode) {\r\n  let i = vnode.data\r\n  // i上面有hook属性，并且把i.hook值赋值给i变量，在走后面的i = i.init判断\r\n  if((i = i.hook) && (i = i.init)) {\r\n    i(vnode) // 初始化组件\r\n  }\r\n  // 如果是组件，就会进去上面的if判断执行i(vnode)方法，执行这个方法，就会在vnode身上添加componentInstance属性\r\n  if(vnode.componentInstance) {\r\n    return true\r\n  }\r\n}\r\n\r\n// 标签里面添加属性\r\nfunction patchProps(el, oldProps = {}, props = {}) {\r\n  // 老的属性里面有，新的属性里面没有，删除老的节点里面的该属性\r\n  let oldStyles = oldProps.style || {}\r\n  let newStyles = props.style || {}\r\n  for(let key in oldStyles) {\r\n    if(!newStyles[key]) {\r\n      el.style[key] = ''\r\n    }\r\n  }\r\n  // 老的属性里面有，新的属性里面没有，删除该属性\r\n  for(let key in oldProps) {\r\n    if(!props[key]) {\r\n      el.removeAttribute(key)\r\n    }\r\n  }\r\n  // 用新的属性覆盖老的属性\r\n  for(let key in props) {\r\n    if(key === 'style') {\r\n      for(let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    }else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nexport function createElement(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if(typeof tag === 'string') {  // 标签\r\n    // 创建真实元素，也要区分是组件还是元素\r\n    if(createComponent(vnode)) { // 组件\r\n      return vnode.componentInstance.$el\r\n    }\r\n\r\n    // 在虚拟节点上面增加该虚拟节点对应的真实dom\r\n    vnode.el = document.createElement(tag)\r\n    // 更新属性\r\n    patchProps(vnode.el, {}, data)\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElement(child))\r\n    })\r\n  }else {\r\n    // 创建文件节点\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\n\r\nexport function patch(oldVnode, vnode) {\r\n  if(!oldVnode) { // 组件的挂载\r\n    return createElement(vnode)\r\n  }\r\n\r\n  // 初始化渲染 \r\n  // 判断oldVnode是真实dom还是虚拟dom，真实dom表示初始化渲染，虚拟dom表示进行diff算法进行更新\r\n  // 真实dom元素身上有nodeType属性，如果是虚拟dom nodeType值为undefined\r\n  const isRealElement = oldVnode.nodeType\r\n  if(isRealElement) {\r\n    // 初始化渲染\r\n    const elm = oldVnode\r\n    const parentElm = elm.parentNode  // 获取父节点\r\n    // 根据虚拟节点，创建真实节点\r\n    let newElm = createElement(vnode)\r\n    // 新的dom插入老的dom后一个兄弟节点之前，删除老的dom (elm.nextSibling获取元素的下一个兄弟节点)\r\n    parentElm.insertBefore(newElm, elm.nextSibling)\r\n    parentElm.removeChild(elm)\r\n\r\n    return newElm\r\n  }else {\r\n    // diff算法\r\n    // 1、两个节点不是同一个节点：直接删除老的删除新的(不进行比对)\r\n    // 2、两个节点是同一个节点 (判断虚拟dom的tag属性和key属性，tag和key一样的，就是同一个节点)\r\n    //    比较两个节点的属性是否有差异，复用老的节点，将差异的属性更新\r\n    // 3、节点比较完毕，就需要比较两个虚拟的子节点\r\n    return patchVNode(oldVnode, vnode)\r\n  }\r\n}\r\n\r\nfunction patchVNode(oldVnode, vnode) {\r\n  if(!isSameVNode(oldVnode, vnode)) {   // 不是同一个节点\r\n    let el = createElement(vnode)\r\n    oldVnode.el.parentNode.replaceChild(el, oldVnode.el)\r\n    return el\r\n  }\r\n\r\n  // 文本的请求：文本期望比较一下文本的内容\r\n  let el = vnode.el = oldVnode.el      // 走到这儿就是相同节点了，相同节点复用\r\n  if(!oldVnode.tag) {    // 是文本，文本不相同，用新的文本覆盖就的文本(tag是undefined就表示文本节点)\r\n    if(oldVnode.text !== vnode.text) {\r\n      el.textContent = vnode.text\r\n    }\r\n  }\r\n\r\n  // 相同节点(标签)：我们需要比对标签的属性\r\n  patchProps(el, oldVnode.data, vnode.data)\r\n\r\n  // 比较子节点 (diff算法比较难的地方就在这儿)\r\n  // 一方有子节点，一方没有子节点；两方都有子节点\r\n  let oldChildren = oldVnode.children  || []\r\n  let newChildren = vnode.children  || []\r\n  if(oldChildren.length > 0 && newChildren.length > 0) {   // 老的和新的都有子节点\r\n    // 完整的diff算法，需要比较两个人的儿子\r\n    updateChildren(el, oldChildren, newChildren)\r\n  }else if(newChildren.length > 0) {   // 没有老的子节点，有新的子节点\r\n    mountChildren(el, newChildren)\r\n  }else if(oldChildren.length > 0) {   // 没有新的子节点，有老的子节点\r\n    el.innerHTML = \"\"\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n  for(let i = 0; i < newChildren.length; i++) {\r\n    let child = newChildren[i]\r\n    el.appendChild(createElement(child))\r\n  }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  // 为了比较两个子节点，增高性能，会有一些优化手段\r\n  // vue2中采用指针的方式比较两个节点\r\n  // 4个指针\r\n  let oldStartIndex = 0\r\n  let newStartIndex = 0\r\n  let oldEndIndex = oldChildren.length - 1\r\n  let newEndIndex = newChildren.length - 1\r\n\r\n  // 4个指针对应的虚拟节点\r\n  let oldStartVnode = oldChildren[0]\r\n  let newStartVnode = newChildren[0]\r\n  let oldEndVnode = oldChildren[oldEndIndex]\r\n  let newEndVnode = newChildren[newEndIndex]\r\n\r\n  function makeIndexByKey(children) {\r\n    // 对老的节点做一个映射，这样就不用每次都去遍历老的节点了\r\n    let map = {}\r\n    children.forEach((child, index) => {\r\n      map[child.key] = index\r\n    })\r\n    return map\r\n  }\r\n  // 做映射表的原因是，避免每次都去遍历老的节点{ 老节点的key: 老节点的索引, .... }\r\n  let map = makeIndexByKey(oldChildren)\r\n\r\n  // 新虚拟节点和老虚拟节点，两者有其中一个头指针 大于等于 尾指针，则停止循环\r\n  while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    // 如果老虚拟节点被标记为undefined了，就直接跳过\r\n    if(oldStartVnode === undefined) {\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n    }else if(oldEndVnode === undefined) {\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n    }else if(isSameVNode(oldStartVnode, newStartVnode)) {\r\n      patchVNode(oldStartVnode, newStartVnode)     // 如果是相同节点，低估比较子节点\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    }else if(isSameVNode(oldEndVnode, newEndVnode)) {\r\n      patchVNode(oldEndVnode, newEndVnode)     // 如果是相同节点，低估比较子节点\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    }else if(isSameVNode(oldStartVnode, newEndVnode)) {\r\n      patchVNode(oldStartVnode, newEndVnode)\r\n      // insertBefore可以移动元素\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    }else if(isSameVNode(oldEndVnode, newStartVnode)) {\r\n      patchVNode(oldEndVnode, newStartVnode)\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    }else {\r\n      // 乱序比对\r\n      // 根据老的列表做一个映射关系，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n      // moveIndex如果有值，说明拿到的老的里面的节点是需要移动的\r\n      let moveIndex = map[newStartVnode.key]\r\n      if(moveIndex !== undefined) {\r\n        let moveVnode = oldChildren[moveIndex] // 找到对应的节点，进行复用\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n        // 移动过的节点，在老的虚拟节点里面清空 (不能删除，删除会导致后面的虚拟节点前移)\r\n        oldChildren[moveIndex] = undefined     // 标识这个虚拟节点对应的dom节点已经移动走了\r\n        patchVNode(moveVnode, newStartVnode)   // 处理过的节点进行比对\r\n      }else {\r\n        let childEl = createElement(newStartVnode)\r\n        el.insertBefore(childEl, oldStartVnode.el)   // 老节点里面没有，创建一个新的节点插在oldStartVnode前面\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex]   // 新虚拟节点第一个节点前移(处理过了)\r\n    }\r\n  }\r\n\r\n  // 插入节点 (可能插入前面，可能插入后面，也可能在中间插入，)\r\n  if(newStartIndex <= newEndIndex) {\r\n    for(let i = newStartIndex; i <= newEndIndex; i++) {\r\n      let childEl = createElement(newChildren[i])\r\n      // while过后newEndIndex值对应的后面一个节点newEndIndex + 1，向newEndIndex + 1这个索引对应节点的前面插入就ok了\r\n      // 如果newEndIndex + 1索引对应的节点不存在，就向el的最后插入节点\r\n      let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null\r\n      el.insertBefore(childEl, anchor)   // anchor为null是则会认为是appendChild (向el的最后插入childEl)\r\n    }\r\n  }\r\n\r\n  // 删除节点\r\n  if(oldStartIndex <= oldEndIndex) {\r\n    for(let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      if(oldChildren[i]) {\r\n        let childEl = oldChildren[i].el\r\n        el.removeChild(childEl)\r\n      }\r\n    }\r\n  }\r\n}","import Watcher from './observe/watcher'\r\nimport { createElementVNode, createTextVNode } from './vdom'\r\nimport { patch } from './vdom/patch'\r\n\r\nexport function initLifeCycle(Vue) {\r\n  // 相当于h函数： _c('span', null, _v(\"world\"))\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n\r\n  // _s函数就是将值转为字符串\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== 'object') return value\r\n    // 如果是对象类型，取值必须要通过JSON.stringify(value)进行取值\r\n    // 如果对象类型不通过JSON.stringify进行取值，页面中显示的就是：[object Object]这样的形式\r\n    return JSON.stringify(value)\r\n  }\r\n\r\n  // 渲染为虚拟DOM：vm.$options.render函数里面使用了with(this)，所有使用的变量和函数都会优先在vm里面去找\r\n  Vue.prototype._render = function () {\r\n    // 绑定render函数里面this为vm，让render函数里面的this执行Vue的实例vm\r\n    return this.$options.render.call(this) // 通过AST抽象语法树转义后生成的render\r\n  }\r\n\r\n  // 虚拟DOM -> 真实DOM\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this\r\n    const el = vm.$el\r\n\r\n    // patch方法：初始化功能，更新功能diff算法(虚拟dom -> 真实dom)\r\n    // vnode创建真实dom替换原来的el\r\n    const preVnode = vm._vnode\r\n    vm._vnode = vnode // 把组件产生最新的虚拟节点保存到vm身上\r\n    if (preVnode) {\r\n      // 如果有preVnode，表示之前渲染过了\r\n      vm.$el = patch(preVnode, vnode)\r\n    } else {\r\n      // 第一次渲染\r\n      vm.$el = patch(el, vnode)\r\n    }\r\n  }\r\n}\r\n\r\n// 组件挂载\r\nexport function mountComponent(vm, el) {\r\n  // 这里的el是进过querySelector处理过的真实的dom元素\r\n  // 挂载el实例\r\n  vm.$el = el\r\n\r\n  // 1.调用render方法，产生虚拟DOM\r\n  // 2.根据虚拟DOM产生真实DOM\r\n  // 3.插入到el元素中\r\n  // vm._render()  --> vm.$options.render() 返回虚拟节点\r\n  // vm._update(虚拟节点)  虚拟节点变成真实节点\r\n  const updateComponent = () => {\r\n    vm._update(vm._render())\r\n  }\r\n  // 一个组件会new一个Watcher\r\n  new Watcher(vm, updateComponent, true) // 第三个参数true表示是一个渲染过程\r\n}\r\n\r\n// 调用vue的生命周期函数\r\nexport function callHook(vm, hook) {\r\n  const handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    // 生命周期函数里面的this都是当前vue的实例\r\n    handlers.forEach((handler) => handler.call(vm))\r\n  }\r\n}\r\n\r\n// vue核心流程\r\n// 1) 创建了响应式数据 (对象使用Object.defineProperty方法进行劫持，数组使用重新7个方法实现劫持)\r\n// 2) 模板转化成AST抽象语法树 (通过正则匹配标签)\r\n// 3) AST抽象语法树转化成了render函数 (render方法就是创建虚拟dom的方法)\r\n// 4) 后续每次数据更新可以只执行render函数 (无需再次执行AST转化的过程)\r\n// 5) render函数目的是产生虚拟节点 (render函数调用的时候，使用了响应式数据，更新数据会被监测到，数据更新之后就去重新执行render函数)\r\n// 6) 根据生成的虚拟节点创造真实DOM\r\n\r\n// vue和react在数据发生变化更新视图的区别？\r\n// vue是组件级别的更新；react整棵树的更新；\r\n","// 合并两个对象，成为一个新对象\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n  'beforeCreate',\r\n  'created',\r\n  'beforeMount',\r\n  'mounted',\r\n  'beforeUpdate',\r\n  'updated',\r\n  'beforeDestroy',\r\n  'destroyed'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n  // p是父亲，c是儿子\r\n  strats[hook] = function(p, c) {\r\n    // {} + {created:function(){}}   合并成   { created: [fn] }\r\n    // {created: [fn]} + {created:function(){}}   合并成   { created: [fn, fn] }\r\n    if(c) {\r\n      if(p) {   // c有值，p有值\r\n        return p.concat(c)\r\n      }else {   // c有值，p没有值\r\n        return [c]\r\n      }\r\n    }else {     // c没有值(直接使用p的值就ok了)\r\n      return p\r\n    }\r\n  }\r\n})\r\n\r\nstrats.components = function(parentVal, childVal) {\r\n  // res的原型对象是parentVal\r\n  const res = Object.create(parentVal)\r\n\r\n  // 给res这个对象本身添加属性，res这个对象的原型是parentVal\r\n  if(childVal) {\r\n    for(let key in childVal) {\r\n      res[key] = childVal[key]\r\n    }\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nexport function mergeOptions(parent, child) {\r\n  const options = {}\r\n  for(let key in parent) {  // 循环老对象\r\n    mergeField(key)\r\n  }\r\n  for(let key in child) {   // 循环新对象\r\n    if(!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n  function mergeField(key) {\r\n    // 对应mixin里面传入的生命周期的方法，我们需要将传入的生命周期的所有的函数放在一个数组里面\r\n    // 策略模式：用策略模式减少if else (strats单词就是策略的意思)\r\n    // 对于mixin传入组件里面的配置：生命周期、data、watch、props、methods、inject、computed...等这些配置\r\n    // 我们都可以使用strats，来进行对Vue.mixin里面传入的全局配置和组件里面写的配置进行合并\r\n    if(strats[key]) {\r\n      options[key] = strats[key](parent[key], child[key])\r\n    }else {\r\n      // 不在策略中的属性，以新传入的为准(child里面的属性为准)\r\n      // 新的属性优先(child里面的属性优先)，普通的方法，新传入的方法去替换之前的老的方法\r\n      options[key] = child[key] || parent[key]\r\n    }\r\n  }\r\n  return options\r\n}","// 给Vue增加init方法\r\nimport { initState } from './state'\r\nimport { compilerToFunction } from './compiler'\r\nimport { mountComponent, callHook } from './lifecycle'\r\nimport { mergeOptions } from './utils'\r\n\r\nexport function initMixin(Vue) {\r\n  // 用于组件初始化操作\r\n  Vue.prototype._init = function(options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    // 我们使用vue的时候，$nextTick $data $attr......\r\n    const vm = this\r\n\r\n    // this.constructor.options：this是Vue的实例，this.constructor就是Vue构造函数\r\n    // 将用户传的配置选项和Vue的全局配置进行合并\r\n    // 我们定义的全局指令、全局过滤器...等都会挂载到vue实例上面，所以每个组件都可以使用全局的一些东西\r\n    // Vue.extend里面调用this._init，此时this.constructor就是Sub构造函数，this就Sub函数的实例对象\r\n    vm.$options = mergeOptions(this.constructor.options, options)  // 将用户的选项挂载在实例上面\r\n\r\n    // 初始化状态之前：执行beforeCreate生命周期函数\r\n    callHook(vm, 'beforeCreate')\r\n\r\n    // 初始化状态、初始化计算属性、初始化watch...等都在这里面\r\n    initState(vm)\r\n\r\n    // 初始化状态之后：执行created生命周期函数\r\n    callHook(vm, 'created')\r\n\r\n    // 实现数据的挂载：如果options配置里面传入了el选项，进行挂载操作\r\n    if(options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n\r\n    let ops = vm.$options\r\n    // 如果options配置项里面有render和template配置，优先使用这两个\r\n    // 优先级：render > template > el\r\n    if(!ops.render) {\r\n      let template   // template是一个字符串类型的\r\n      // 没有template，但是有el\r\n      if(!ops.template && el) {\r\n        template = el.outerHTML\r\n      }else {\r\n        // 有template，使用template (用template里面的内容去替换掉el对应的dom元素的内容)\r\n        template = ops.template\r\n      }\r\n\r\n      // 模板编译\r\n      if(template) {\r\n        // compilerToFunction：模板编译成render函数\r\n        const render = compilerToFunction(template)\r\n        ops.render = render  // jsx最终会被编译成 h('xxx)\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el)  // 组件的挂载\r\n  }\r\n}\r\n\r\n","import { mergeOptions } from './utils'\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  // 全局的mixin，其实就是把这些属性全部合并在Vue.options身上\r\n  // Vue组件在初始化的时候，会将自己的配置对象和全局配置对象进行合并\r\n  Vue.options = {\r\n    _base: Vue\r\n  }\r\n\r\n  // Vue的静态属性和静态方法：这里mixin注意讲普通方法 + 生命周期是如何通过mixin进行混入的\r\n  Vue.mixin = function (mixin) {\r\n    // 我们期望将全局的options 和 用户的选项进行合并\r\n    // 如果mixin里面传入的方法是普通的方法，新传入的方法之前去替换掉以前的方法\r\n    // 如果mixin里面传入的是生命周期的方法，要按照下面的方式进行合并 (用一个数组将所有的生命周期方法收集起来)\r\n    // {} + {created:function(){}}   合并成   { created: [fn] }\r\n    // {created: [fn]} + {created:function(){}}   合并成   { created: [fn, fn] }\r\n    this.options = mergeOptions(this.options, mixin)\r\n    return this\r\n  }\r\n\r\n  // 实现Vue.extend\r\n  Vue.extend = function (options) {\r\n    // Vue.extend()返回Sub，new Sub().$mount(选择器)进行挂载\r\n    // Sub必须去继承Vue，才能让Sub的实例对象身上有$mount方法\r\n    function Sub(options = {}) {\r\n      // 默认对子类进行初始化操作\r\n      this._init(options)\r\n    }\r\n    // 让Vue.prototype._proto__ = Vue.prototype\r\n    Sub.prototype = Object.create(Vue.prototype)\r\n    Sub.prototype.constructor = Sub\r\n\r\n    // 将用户Vue.extend()里面传入的参数和全局的Vue.options进行合并\r\n    // Vue.options里面放的是全局的组件，options里面放的是局部的组件\r\n    Sub.options = mergeOptions(Vue.options, options)\r\n    return Sub\r\n  }\r\n\r\n  // 实现Vue.component\r\n  // Vue.component是创建一个全局的组件，我们需要将这个组件混入到全局里面\r\n  // 如果是全局的自定义指令，也是一样的，就是增加Vue.options.directive = {}\r\n  Vue.options.components = {}\r\n  Vue.component = function (id, definition) {\r\n    // 如果definition已经是一个Sub函数了，就表示用户自己调用了Vue.extend\r\n    definition = typeof definition === 'function' ? definition : Vue.extend(definition)\r\n    Vue.options.components[id] = definition\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { initGlobalAPI } from './globalAPI'\r\nimport { initStateMixin } from './state'\r\nimport { compilerToFunction } from './compiler'\r\nimport { patch, createElement } from './vdom/patch'\r\n\r\n// options就是用户的选项\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue)       // 扩展init方法\r\ninitLifeCycle(Vue)\r\ninitGlobalAPI(Vue)   // 扩展Vue.mixin方法 (全局api的实现)\r\ninitStateMixin(Vue)  // 扩展vm.$nextTick、vm.$watch...\r\n\r\nexport default Vue\r\n\r\n\r\n\r\n// 测试diff算法的代码\r\n// compilerToFunction模板编译成render函数\r\n// render函数调用变成虚拟节点\r\n// createElement(虚拟节点)变成真正的dom节点\r\n// const render1 = compilerToFunction(`<ul style=\"color: red;\">\r\n//   <li key=\"a\">a</li>\r\n//   <li key=\"b\">b</li>\r\n//   <li key=\"c\">c</li>\r\n//   <li key=\"d\">d</li>\r\n// </ul>`)\r\n// let vm1 = new Vue({\r\n//   data: {\r\n//     name: '珠峰'\r\n//   }\r\n// })\r\n// const prevVnode = render1.call(vm1)\r\n\r\n// let el = createElement(prevVnode)\r\n// document.body.appendChild(el)\r\n\r\n// const render2 = compilerToFunction(`<ul style=\"color: blue;\">\r\n//   <li key=\"b\">b</li>\r\n//   <li key=\"m\">m</li>\r\n//   <li key=\"a\">a</li>\r\n//   <li key=\"p\">p</li>\r\n//   <li key=\"c\">c</li>\r\n//   <li key=\"q\">q</li>\r\n// </ul>`)\r\n// let vm2 = new Vue({\r\n//   data: {\r\n//     name: '教育'\r\n//   }\r\n// })\r\n// const nextVnode = render2.call(vm2)\r\n\r\n// setTimeout(() => {\r\n//   patch(prevVnode, nextVnode)\r\n// }, 1500)"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","push","update","stack","pushTarget","popTarget","pop","length","Observer","data","defineProperty","enumerable","value","isArray","__proto__","walk","keys","key","defineReactive","item","observe","dependArray","i","current","depend","childOb","get","set","newValue","Watcher","vm","exprOrFn","options","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","has","add","addSub","queueWatcher","oldValue","queue","pending","flushSchedulerQueue","flushQueue","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","_data","proxy","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","handler","createWatcher","$watch","initStateMixin","Vue","$nextTick","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","obj","split","filter","Boolean","trim","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compilerToFunction","template","render","Function","isReservedTag","includes","createElementVNode","createVNode","Ctor","components","createComponentVNode","_base","extend","hook","init","vnode","instance","componentInstance","componentOptions","$mount","createTextVNode","isSameVNode","vnode1","vnode2","createComponent","patchProps","el","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","createElement","$el","appendChild","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","_c","arguments","_v","_s","_render","_update","preVnode","_vnode","mountComponent","updateComponent","callHook","handlers","strats","LIFECYCLE","p","c","concat","parentVal","childVal","res","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","constructor","querySelector","ops","outerHTML","initGlobalAPI","mixin","Sub","component","definition"],"mappings":"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"}